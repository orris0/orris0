{"version":3,"file":"purify.js","sources":["../node_modules/one-validation/validation.js","../node_modules/punycode/punycode.js","../node_modules/unicoderegexp/lib/unicodeRegExp.js","../src/purify.js"],"sourcesContent":["/*global module, define*/\n\n(function (root, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else {\n        root.one = root.one || {};\n        root.one.validation = factory();\n    }\n}(this, function () {\n    'use strict';\n\n    // Poor man's /x flag:\n    // new RegExp(concatRegExps(\n    //    /blabla/,\n    //    /blablabla/\n    // ), 'i').test(string);\n    function concatRegExps() { // ...\n        var source = '',\n        i = 0;\n        for (; i < arguments.length; i += 1) {\n            if (Object.prototype.toString.call(arguments[i]) === '[object RegExp]') {\n                source += arguments[i].source;\n            } else {\n                source += arguments[i];\n            }\n        }\n        return source;\n    }\n\n    var ipv4DigitRegExpSource = /(?:[0-9]|1?[0-9][0-9]|2[0-4][0-9]|25[0-5])/.source,\n        validation = {\n            functions: {}\n        },\n        fragments = {\n            visibleNonAsciiChar: /[ªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԥԱ-Ֆՙա-ևא-תװ-ײء-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨऄ-हऽॐक़-ॡॱॲॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡഅ-ഌഎ-ഐഒ-നപ-ഹഽൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜໝༀཀ-ཇཉ-ཬྈ-ྋက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-Ⴥა-ჺჼᄀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₔℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎↃↄⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⴀ-ⴥⴰ-ⵥⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々〆〱-〵〻〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆷㇰ-ㇿ㐀-䶵一-鿋ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙟꙢ-ꙮꙿ-ꚗꚠ-ꛥꜗ-ꜟꜢ-ꞈꞋꞌꟻ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-鶴侮-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ̀-ͯ҃-҉֑-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٞۖ-ۜ۞-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࠭ऀ-ः़ा-ॎ॑-ॕॢॣঁ-ঃ়া-ৄেৈো-্ৗৢৣਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑੰੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣஂா-ூெ-ைொ-்ௗఁ-ఃా-ౄె-ైొ-్ౕౖౢౣಂಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣംഃാ-ൄെ-ൈൊ-്ൗൢൣංඃ්ා-ුූෘ-ෟෲෳัิ-ฺ็-๎ັິ-ູົຼ່-ໍ༹༘༙༵༷༾༿ཱ-྄྆྇ྐ-ྗྙ-ྼ࿆ါ-ှၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏႚ-ႝ፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳា-៓៝᠋-᠍ᢩᤠ-ᤫᤰ-᤻ᦰ-ᧀᧈᧉᨗ-ᨛᩕ-ᩞ᩠-᩿᩼ᬀ-ᬄ᬴-᭄᭫-᭳ᮀ-ᮂᮡ-᮪ᰤ-᰷᳐-᳔᳒-᳨᳭ᳲ᷀-᷽ᷦ-᷿⃐-⃰⳯-⳱ⷠ-〪ⷿ-゙゚〯꙯-꙲꙼꙽꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-꣄꣠-꣱ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀ꨩ-ꨶꩃꩌꩍꩻꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꯣ-ꯪ꯬꯭ﬞ︀-️︠-︦²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９¡«·»¿;·՚-՟։֊־׀׃׆׳״؉؊،؍؛؞؟٪-٭۔܀-܍߷-߹࠰-࠾।॥॰෴๏๚๛༄-༒༺-༽྅࿐-࿔၊-၏჻፡-፨᐀᙭᙮᚛᚜᛫-᛭᜵᜶។-៖៘-៚᠀-᠊᥄᥅᧞᧟᨞᨟᪠-᪦᪨-᪭᭚-᭠᰻-᰿᱾᱿᳓‐-‧‰-⁃⁅-⁑⁓-⁞⁽⁾₍₎〈〉❨-❵⟅⟆⟦-⟯⦃-⦘⧘-⧛⧼⧽⳹-⳼⳾⳿⸀-⸮⸰⸱、-〃〈-】〔-〟〰〽゠・꓾꓿꘍-꘏꙳꙾꛲-꛷꡴-꡷꣎꣏꣸-꣺꤮꤯꥟꧁-꧍꧞꧟꩜-꩟꫞꫟꯫﴾﴿︐-︙︰-﹒﹔-﹡﹣﹨﹪﹫！-＃％-＊，-／：；？＠［-］＿｛｝｟-･¢-©¬®-±´¶¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂؆-؈؋؎؏۩۽۾߶৲৳৺৻૱୰௳-௺౿ೱೲ൹฿༁-༃༓-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟፠᎐-᎙៛᥀᧠-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₸℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏨␀-␦⑀-⑊⒜-ⓩ─-⛍⛏-⛡⛣⛨-⛿✁-✄✆-✉✌-✧✩-❋❍❏-❒❖-❞❡-❧➔➘-➯➱-➾⟀-⟄⟇-⟊⟌⟐-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-\\uffee\\ufffc\\ufffd]/,\n            printableAsciiChar: /[\\x21-\\x7e]*/,\n            visibleAsciiChar: /[\\x20-\\x7e]*/,\n            subDomainPart: /[_a-z0-9](?:[_\\-a-z0-9]*[_a-z0-9])?/i,\n            domainPart: /[a-z0-9](?:[\\-a-z0-9]*[a-z0-9])?/i,\n            punycodeTld: /xn\\-\\-[a-z0-9]{4,}/i,\n            tld: /[a-z][\\-a-z]*[a-z]/i,\n            port: /\\d{1,5}/,\n            localpart: /[a-z0-9!#$%&'*+\\/=?\\^_`{|}~\\-:][\\.a-z0-9!#$%&'*+\\/=?\\^_`{|}~\\-]*/i, // taken from: http://www.regular-expressions.info/email.html\n            user: /[^:@\\/]+/i,\n            uuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/i,\n            lowerCaseUuid: /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/,\n            upperCaseUuid: /[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}/,\n            password: /[^@\\/]+?/i,\n            pathname: /[\\w\\-\\.~%!$&'\\(\\)*+,;=:@\\/]*/,\n            search:   /[\\w\\-\\.~%!$&'\\(\\)*+,;=:@\\/?]*/,\n            hash:     /[\\w\\-\\.~%!$&'\\(\\)*+,;=:@\\/?#]*/,\n            ipv4: new RegExp('(?:' + ipv4DigitRegExpSource + '\\\\.){3}' + ipv4DigitRegExpSource)\n        },\n        name;\n\n    // Highlevel regexes composed of regex fragments\n    var alphanumericalPlusVisibleNonAsciiChars = new RegExp(fragments.visibleNonAsciiChar.source.replace(/^\\[/, '[a-z0-9')),\n        alphabeticalPlusVisibleNonAsciiChars = new RegExp(fragments.visibleNonAsciiChar.source.replace(/^\\[/, '[a-z'));\n    fragments.domainPartIdn = new RegExp(concatRegExps(alphanumericalPlusVisibleNonAsciiChars,\n                                                       '(?:',\n                                                       new RegExp(alphanumericalPlusVisibleNonAsciiChars.source.replace(/^\\[/, '[\\\\-') + '*'),\n                                                       alphanumericalPlusVisibleNonAsciiChars,\n                                                       ')?'));\n    fragments.tldIdn = new RegExp(concatRegExps(alphabeticalPlusVisibleNonAsciiChars,\n                                                       new RegExp(alphabeticalPlusVisibleNonAsciiChars.source.replace(/^\\[/, '[\\\\-') + '*'),\n                                                       alphabeticalPlusVisibleNonAsciiChars));\n\n    // TODO: Consider disallowing invalid IDN domains, e.g. one-letter TLD \"foo.æ\" which has an ASCII representation of \"foo.xn--6ca\"\n\n    // punycodetld source should come first than the normal tld because its a subset of normal tld.\n    fragments.domain = fragments.domainName = new RegExp('(?:' + fragments.subDomainPart.source + '\\\\.)*' + '(?:' + fragments.domainPart.source + '\\\\.)+' + '(?:' + '(?:' + fragments.punycodeTld.source + ')' + '|(?:' + fragments.tld.source + '))', 'i');\n    fragments.domainIdn = fragments.domainNameIdn = new RegExp('(?:' + fragments.domainPartIdn.source + '\\\\.)+' + fragments.tldIdn.source, 'i');\n\n    fragments.email = fragments.emailAddress = new RegExp(fragments.localpart.source + '@' + fragments.domain.source, 'i');\n    fragments.emailIdn = fragments.emailAddressIdn = new RegExp(fragments.localpart.source + '@' + fragments.domainIdn.source, 'i');\n    fragments.mailtoUrl = new RegExp('mailto:' + fragments.email.source, 'i'); // TODO: This needs to be improved\n    fragments.mailtoUrlIdn = new RegExp('mailto:' + fragments.emailIdn.source, 'i'); // TODO: This needs to be improved\n\n    // Same as location.pathname + location.search + location.hash in the browser:\n    fragments.searchHash = new RegExp(concatRegExps(\n        '(?:\\\\?', fragments.search, ')?',\n        '(?:#', fragments.hash, ')?'\n    ));\n    fragments.pathnameSearchHash = new RegExp(concatRegExps(\n        '(?:', fragments.pathname,\n            fragments.searchHash,\n        ')?' // See http://www.ietf.org/rfc/rfc1738.txt\n    ));\n\n    // Root-relative URL. Same as pathnameSearchHash, except it can't be empty\n    fragments.rootRelativeUrl = new RegExp(concatRegExps(\n        '/',\n        new RegExp(fragments.pathnameSearchHash.source.replace(/\\?$/, '')\n    )));\n\n    function createHttpishUrlRegExp(options) {\n        // [protocol\"://\"[username[\":\"password]\"@\"]hostname[\":\"port]\"/\"?][path][\"?\"querystring][\"#\"fragment]\n        options = options || {};\n        return new RegExp(concatRegExps(\n            (options.scheme || 'https?'), '://',\n            '(?:',\n                fragments.user,\n                '(?::',\n                    fragments.password,\n                ')?@',\n            ')?',\n            '(?:',\n                (options.localhost ? 'localhost|' : ''),\n                (options.idn ? fragments.domainIdn : fragments.domain),\n                '|',\n                fragments.ipv4,\n            ')',\n            '(?::', fragments.port, ')?',\n            '(?:/', fragments.pathnameSearchHash, '|', fragments.searchHash, ')'\n        ), 'i');\n    }\n\n    fragments.httpUrl = createHttpishUrlRegExp({scheme: /https?/});\n    fragments.httpUrlIdn = createHttpishUrlRegExp({scheme: /https?/, idn: true});\n    fragments.ftpUrl = createHttpishUrlRegExp({scheme: /ftp/});\n    fragments.ftpUrlIdn = createHttpishUrlRegExp({scheme: /ftp/, idn: true});\n\n    function getFlagsStringFromRegExp(regExp) {\n        var flagsString = '';\n        if (regExp.ignoreCase) {\n            flagsString += 'i';\n        }\n        if (regExp.global) {\n            flagsString += 'g';\n        }\n        if (regExp.multiline) {\n            flagsString += 'm';\n        }\n        return flagsString;\n    }\n\n    // Add convenience regexes and functions\n    for (name in fragments) {\n        if (fragments.hasOwnProperty(name)) {\n            validation[name] = new RegExp('^' + fragments[name].source + '$', getFlagsStringFromRegExp(fragments[name]));\n            validation.functions[name] = (function (name) {\n                return function (value) {\n                    return validation[name].test(value);\n                };\n            }(name));\n        }\n    }\n\n    // Expose regex fragments for matching inside larger texts\n    validation.fragments = fragments;\n\n    validation.createHttpishUrlRegExp = createHttpishUrlRegExp;\n\n    return validation;\n}));\n\n","/*! http://mths.be/punycode v1.3.0 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar labels = string.split(regexSeparators);\n\t\t// Note: each label could still contain `@` in the case of an email address.\n\t\treturn map(labels, function(label) {\n\t\t\tvar parts = label.split('@');\n\t\t\treturn map(parts, fn).join('@');\n\t\t}).join('.');\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <http://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.0',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <http://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","(function (root, factory) {\n    // expose unicodeRegExp as\n    // - an AMD module (require)\n    // - a node module\n\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    }\n}(this, function (xregexp) {\n    var unicodeRegExp = {};\n\n    // These are taken from the XRegExp library (see ../extractRegExpsFromXRegExp.js):\n    unicodeRegExp.letter = /[A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԧԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠࢢ-ࢬऄ-हऽॐक़-ॡॱ-ॷॹ-ॿঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-ళవ-హఽౘౙౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൠൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏼᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤜᥐ-ᥭᥰ-ᥴᦀ-ᦫᧁ-ᧇᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎↃↄⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々〆〱-〵〻〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿌ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚗꚠ-ꛥꜗ-ꜟꜢ-ꞈꞋ-ꞎꞐ-ꞓꞠ-Ɦꟸ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꪀ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ]/;\n    unicodeRegExp.mark = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u08FE\\u0900-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C01-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C82\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D02\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1DC0-\\u1DE6\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE26]/;\n    unicodeRegExp.number = /[0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꩐-꩙꯰-꯹０-９]/;\n    unicodeRegExp.punctuation = /[\\u0021-\\u0023\\u0025-\\u002A\\u002C-\\u002F\\u003A\\u003B\\u003F\\u0040\\u005B-\\u005D\\u005F\\u007B\\u007D\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u0AF0\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E3B\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/;\n    unicodeRegExp.symbol = /[\\u0024+<->\\u005E`\\u007C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₹℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏←-⌨⌫-⏳␀-␦⑀-⑊⒜-ⓩ─-⛿✁-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭌⭐-⭙⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�]/;\n    unicodeRegExp.separator = /[\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n    unicodeRegExp.other = /[\\u0000-\\u001F\\u007F-\\u009F\\u00AD\\u0378\\u0379\\u037F-\\u0383\\u038B\\u038D\\u03A2\\u0528-\\u0530\\u0557\\u0558\\u0560\\u0588\\u058B-\\u058E\\u0590\\u05C8-\\u05CF\\u05EB-\\u05EF\\u05F5-\\u0605\\u061C\\u061D\\u06DD\\u070E\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07FB-\\u07FF\\u082E\\u082F\\u083F\\u085C\\u085D\\u085F-\\u089F\\u08A1\\u08AD-\\u08E3\\u08FF\\u0978\\u0980\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09FC-\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF2-\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B78-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BFB-\\u0C00\\u0C04\\u0C0D\\u0C11\\u0C29\\u0C34\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5A-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C77\\u0C80\\u0C81\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0D01\\u0D04\\u0D0D\\u0D11\\u0D3B\\u0D3C\\u0D45\\u0D49\\u0D4F-\\u0D56\\u0D58-\\u0D5F\\u0D64\\u0D65\\u0D76-\\u0D78\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DF1\\u0DF5-\\u0E00\\u0E3B-\\u0E3E\\u0E5C-\\u0E80\\u0E83\\u0E85\\u0E86\\u0E89\\u0E8B\\u0E8C\\u0E8E-\\u0E93\\u0E98\\u0EA0\\u0EA4\\u0EA6\\u0EA8\\u0EA9\\u0EAC\\u0EBA\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F48\\u0F6D-\\u0F70\\u0F98\\u0FBD\\u0FCD\\u0FDB-\\u0FFF\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u137D-\\u137F\\u139A-\\u139F\\u13F5-\\u13FF\\u169D-\\u169F\\u16F1-\\u16FF\\u170D\\u1715-\\u171F\\u1737-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17DE\\u17DF\\u17EA-\\u17EF\\u17FA-\\u17FF\\u180F\\u181A-\\u181F\\u1878-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191D-\\u191F\\u192C-\\u192F\\u193C-\\u193F\\u1941-\\u1943\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DB-\\u19DD\\u1A1C\\u1A1D\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1A9F\\u1AAE-\\u1AFF\\u1B4C-\\u1B4F\\u1B7D-\\u1B7F\\u1BF4-\\u1BFB\\u1C38-\\u1C3A\\u1C4A-\\u1C4C\\u1C80-\\u1CBF\\u1CC8-\\u1CCF\\u1CF7-\\u1CFF\\u1DE7-\\u1DFB\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FC5\\u1FD4\\u1FD5\\u1FDC\\u1FF0\\u1FF1\\u1FF5\\u1FFF\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u206F\\u2072\\u2073\\u208F\\u209D-\\u209F\\u20BA-\\u20CF\\u20F1-\\u20FF\\u218A-\\u218F\\u23F4-\\u23FF\\u2427-\\u243F\\u244B-\\u245F\\u2700\\u2B4D-\\u2B4F\\u2B5A-\\u2BFF\\u2C2F\\u2C5F\\u2CF4-\\u2CF8\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D71-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E3C-\\u2E7F\\u2E9A\\u2EF4-\\u2EFF\\u2FD6-\\u2FEF\\u2FFC-\\u2FFF\\u3040\\u3097\\u3098\\u3100-\\u3104\\u312E-\\u3130\\u318F\\u31BB-\\u31BF\\u31E4-\\u31EF\\u321F\\u32FF\\u4DB6-\\u4DBF\\u9FCD-\\u9FFF\\uA48D-\\uA48F\\uA4C7-\\uA4CF\\uA62C-\\uA63F\\uA698-\\uA69E\\uA6F8-\\uA6FF\\uA78F\\uA794-\\uA79F\\uA7AB-\\uA7F7\\uA82C-\\uA82F\\uA83A-\\uA83F\\uA878-\\uA87F\\uA8C5-\\uA8CD\\uA8DA-\\uA8DF\\uA8FC-\\uA8FF\\uA954-\\uA95E\\uA97D-\\uA97F\\uA9CE\\uA9DA-\\uA9DD\\uA9E0-\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A\\uAA5B\\uAA7C-\\uAA7F\\uAAC3-\\uAADA\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F-\\uABBF\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBC2-\\uFBD2\\uFD40-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFE\\uFDFF\\uFE1A-\\uFE1F\\uFE27-\\uFE2F\\uFE53\\uFE67\\uFE6C-\\uFE6F\\uFE75\\uFEFD-\\uFF00\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFDF\\uFFE7\\uFFEF-\\uFFFB\\uFFFE\\uFFFF]/; // Other (control, format, private use, surrogate, and unassigned codes)\n\n    unicodeRegExp.spliceCharacterClassRegExps = function () { // ...\n        var args = Array.prototype.slice.call(arguments);\n\n        return new RegExp('[' + args.map(function (regExp) {\n            return regExp.source.replace(/^\\[|\\]$/g, '');\n        }).join(\"\") + ']');\n    };\n\n    // All of the above combined, except 'separator', and 'other':\n    unicodeRegExp.visible = unicodeRegExp.spliceCharacterClassRegExps(\n        unicodeRegExp.letter,\n        unicodeRegExp.mark,\n        unicodeRegExp.number,\n        unicodeRegExp.punctuation,\n        unicodeRegExp.symbol\n    );\n\n    // The set of printable characters also includes space:\n    unicodeRegExp.printable = unicodeRegExp.spliceCharacterClassRegExps(\n        unicodeRegExp.visible,\n        unicodeRegExp.separator\n    );\n\n    // Helper function for removing a char from a character class regular expression:\n\n    function parseCharCode(u4, x2, literal) {\n        if (u4 || x2) {\n            return parseInt(u4 || x2, 16);\n        } else {\n            return literal.charCodeAt(0);\n        }\n    }\n\n    function charCodeToRegExpToken(charCode) {\n        if (charCode >= 0x20 && charCode < 0x7f) {\n            return String.fromCharCode(charCode);\n        } else {\n            var hexStr = charCode.toString(16);\n            return \"\\\\u\" + \"0000\".slice(hexStr.length) + hexStr;\n        }\n    }\n\n    var characterClassToken = /(?:\\\\u([0-9a-f]{4})|\\\\x([0-9a-f]{2})|([^\\-]))(?:-(?:\\\\u([0-9a-f]{4})|\\\\x([0-9a-f]{2})|([^\\-])))?/gi;\n\n    unicodeRegExp.removeCharacterFromCharacterClassRegExp = function (regExp, ch) {\n        var charCode = ch.charCodeAt(0);\n\n        return new RegExp('[' + regExp.source.replace(/^\\[|\\]$/g, '').replace(characterClassToken, function ($0, fromU4, fromX2, fromLiteral, toU4, toX2, toLiteral) {\n            var fromCharCode = parseCharCode(fromU4, fromX2, fromLiteral);\n            if (toU4 || toX2 || toLiteral) {\n                var toCharCode = parseCharCode(toU4, toX2, toLiteral);\n                if (charCode === fromCharCode) {\n                    if (charCode + 1 < toCharCode) {\n                        return charCodeToRegExpToken(charCode + 1) + '-' + charCodeToRegExpToken(toCharCode);\n                    } else {\n                        return charCodeToRegExpToken(toCharCode);\n                    }\n                } else if (charCode === toCharCode) {\n                    if (fromCharCode < charCode - 1) {\n                        return charCodeToRegExpToken(fromCharCode) + '-' + charCodeToRegExpToken(charCode - 1);\n                    } else {\n                        // fromCharCode === toCharCode - 1, rewrite to single char\n                        return charCodeToRegExpToken(fromCharCode);\n                    }\n                } else if (charCode > fromCharCode && charCode < toCharCode) {\n                    return charCodeToRegExpToken(fromCharCode) + (charCode > fromCharCode + 1 ? '-' + charCodeToRegExpToken(charCode - 1) : '') +\n                        (charCode + 1 < toCharCode ? charCodeToRegExpToken(charCode + 1) + '-' : '') + charCodeToRegExpToken(toCharCode);\n                } else {\n                    return $0;\n                }\n            } else {\n                if (charCode === fromCharCode) {\n                    return \"\";\n                } else {\n                    return charCodeToRegExpToken(fromCharCode);\n                }\n            }\n        }) + ']');\n    };\n\n    return unicodeRegExp;\n}));\n","var oneValidation = require('one-validation');\nvar punycode = require('punycode');\nvar unicodeRegExp = require('unicoderegexp');\n\nmodule.exports = (function () {\n    var purify = {};\n\n    purify.boolean = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'boolean') {\n            return rawValue;\n        } else if (typeof rawValue === 'string') {\n            var isTrue  = /^(?:1|on|true|yes)$/i.test(rawValue),\n                isFalse = /^(?:0|off|false|no)$/i.test(rawValue);\n            return isTrue ? true : (isFalse ? false : defaultValue);\n        }\n        return defaultValue;\n    };\n\n    purify.email = purify.emailAddress = function (rawValue, defaultValue) {\n        // Should return an email with the domain part in its punycoded form regardless of input\n        var fragments,\n            encodedEmail,\n            encodedDomain;\n\n        try {\n            if (typeof rawValue === 'string' && oneValidation.emailIdn.test(rawValue)) {\n                fragments = rawValue.split('@');\n                encodedDomain = fragments.length === 2 && punycode.toASCII(fragments[1]).toLowerCase();\n                var decodedDomain = punycode.toUnicode(encodedDomain); // Makes sure invalid domains like foo.xn--no aren't allowed\n\n                if (!(/\\.[^\\.]{2,}$/.test(decodedDomain))) {\n                    encodedDomain = undefined; // Sorry, one-letter TLDs still aren't allowed\n                }\n            }\n        } catch (e) {\n            encodedDomain = undefined;\n        } finally {\n            encodedEmail = encodedDomain && fragments[0] + '@' + encodedDomain;\n            if (typeof encodedEmail === 'string' && oneValidation.email.test(encodedEmail)) {\n                return encodedEmail;\n            } else {\n                return defaultValue;\n            }\n        }\n    };\n\n    purify.emailIdn = purify.emailAddressIdn = function (rawValue, defaultValue) {\n        // Should return an email with the domain part in its non-punycoded form regardless of input\n        var fragments,\n            decodedDomain,\n            decodedEmail;\n\n        try {\n            if (typeof rawValue === 'string' && oneValidation.emailIdn.test(rawValue)) {\n                fragments = rawValue.split('@');\n                decodedDomain = fragments.length === 2 && punycode.toUnicode(fragments[1]).toLowerCase();\n\n                if (!(/\\.[^\\.]{2,}$/.test(decodedDomain))) {\n                    decodedDomain = undefined; // Sorry, one-letter TLDs still aren't allowed\n                }\n            }\n        } catch (e) {\n            decodedDomain = undefined;\n        } finally {\n            decodedEmail = decodedDomain && fragments[0] + '@' + decodedDomain;\n            if (typeof decodedEmail === 'string' && oneValidation.emailIdn.test(decodedEmail)) {\n                return decodedEmail;\n            } else {\n                return defaultValue;\n            }\n        }\n    };\n\n    purify.domain = purify.domainName = function (rawValue, defaultValue) {\n        // Should return a domain in its punycoded form regardless of input\n        var encodedDomain;\n        try {\n            if (typeof rawValue === 'string' && oneValidation.domainIdn.test(rawValue)) {\n                encodedDomain = punycode.toASCII(rawValue.toLowerCase());\n                var decodedDomain = punycode.toUnicode(encodedDomain); // Makes sure that things like foo.xn--no aren't allowed\n\n                if (!(/\\.[^\\.]{2,}$/.test(decodedDomain))) {\n                    encodedDomain = undefined; // Sorry, one-letter TLDs still aren't allowed\n                }\n            }\n        } catch (e) {\n            encodedDomain = undefined;\n        } finally {\n            if (typeof encodedDomain === 'string' && oneValidation.domain.test(encodedDomain)) {\n                return encodedDomain;\n            } else {\n                return defaultValue;\n            }\n        }\n    };\n\n    purify.domainIdn = purify.domainNameIdn = function (rawValue, defaultValue) {\n        // Should return a domain in its non-punycoded form regardless of input\n        var decodedDomain;\n        try {\n            if (typeof rawValue === 'string' && oneValidation.domainIdn.test(rawValue)) {\n                decodedDomain = punycode.toUnicode(rawValue.toLowerCase());\n\n                if (!(/\\.[^\\.]{2,}$/.test(decodedDomain))) {\n                    decodedDomain = undefined; // Sorry, one-letter TLDs still aren't allowed\n                }\n            }\n        } catch (e) {\n            decodedDomain = undefined;\n        } finally {\n            if (typeof decodedDomain === 'string' && oneValidation.domainIdn.test(decodedDomain)) {\n                return decodedDomain;\n            } else {\n                return defaultValue;\n            }\n        }\n    };\n\n    purify.url = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && oneValidation.httpUrl.test(rawValue)) {\n            return rawValue;\n        }\n        return defaultValue;\n    };\n\n    var urlWithLocalhostRegExp = new RegExp('^(?:' + oneValidation.createHttpishUrlRegExp({scheme: /https?/, localhost: true}).source + ')$');\n\n    purify.urlWithLocalhost = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && urlWithLocalhostRegExp.test(rawValue)) {\n            return rawValue;\n        }\n        return defaultValue;\n    };\n\n    purify.integer = function (rawValue, defaultValue) {\n        var integer;\n        if (typeof rawValue === 'string') {\n            integer = parseInt(rawValue, 10);\n        } else if (typeof rawValue === 'number') {\n            integer = Math.floor(rawValue);\n        }\n        if (typeof integer === 'number' && isFinite(integer) && !isNaN(integer)) {\n            return integer;\n        } else {\n            return defaultValue;\n        }\n    };\n\n    purify.integerInRange = function (rawValue, lower, upper, defaultValue) {\n        var integer = purify.integer(rawValue);\n        if (typeof integer === 'number' && !isNaN(integer) && isFinite(integer) && (typeof lower === 'undefined' || integer >= lower) && (typeof upper === 'undefined' || integer <= upper)) {\n            return integer;\n        }\n        return defaultValue;\n    };\n\n    purify.positiveInteger = function (rawValue, defaultValue) {\n        var integer = purify.integer(rawValue);\n        if (typeof integer !== 'undefined' && !isNaN(integer) && isFinite(integer) && integer >= 1) {\n            return integer;\n        }\n        return defaultValue;\n    };\n\n    purify.positiveIntegerOrZero = function (rawValue, defaultValue) {\n        var integer = purify.integer(rawValue);\n        if (typeof integer !== 'undefined' && !isNaN(integer) && isFinite(integer) && integer >= 0) {\n            return integer;\n        }\n        return defaultValue;\n    };\n\n    purify.float = function (rawValue, defaultValue) {\n        var number;\n        if (typeof rawValue === 'string') {\n            if (/^[\\-+]?[0-9]*\\.?[0-9]+$/.test(rawValue)) {\n                number = parseFloat(rawValue);\n            }\n        } else if (typeof rawValue === 'number') {\n            number = rawValue;\n        }\n        if (typeof number !== 'undefined' && !isNaN(number) && isFinite(number)) {\n            return number;\n        }\n        return defaultValue;\n    };\n\n    purify.positiveFloat = function (rawValue, defaultValue) {\n        var number;\n        if (typeof rawValue === 'string') {\n            if (/^\\+?[0-9]*\\.?[0-9]+$/.test(rawValue)) {\n                number = parseFloat(rawValue);\n            }\n        } else if (typeof rawValue === 'number') {\n            number = rawValue;\n        }\n        if (typeof number !== 'undefined' && !isNaN(number) && isFinite(number) && number > 0) {\n            return number;\n        }\n        return defaultValue;\n    };\n\n    purify.positiveFloatOrZero = function (rawValue, defaultValue) {\n        var number;\n        if (typeof rawValue === 'string') {\n            if (/^\\+?[0-9]*\\.?[0-9]+$/.test(rawValue)) {\n                number = parseFloat(rawValue);\n            }\n        } else if (typeof rawValue === 'number') {\n            number = rawValue;\n        }\n        if (typeof number !== 'undefined' && !isNaN(number) && isFinite(number) && number >= 0) {\n            return number;\n        }\n        return defaultValue;\n    };\n\n    // Visible characters, full Unicode repertoire\n    var nonEmptyVisibleUnicodeRegExp = new RegExp('^' + unicodeRegExp.visible.source + '+$');\n    purify.nonEmptyVisibleUnicode = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && nonEmptyVisibleUnicodeRegExp.test(rawValue)) {\n            return rawValue;\n        }\n        return defaultValue;\n    };\n\n    // Visible characters, full Unicode repertoire\n    var visibleUnicodeRegExp = new RegExp('^' + unicodeRegExp.visible.source + '*$');\n    purify.visibleUnicode = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && visibleUnicodeRegExp.test(rawValue)) {\n            return rawValue;\n        }\n        return defaultValue;\n    };\n\n    // Visible characters + space, full Unicode repertoire\n    var nonEmptyPrintableUnicodeRegExp = new RegExp('^' + unicodeRegExp.printable.source + '+$');\n    purify.nonEmptyPrintableUnicode = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && nonEmptyPrintableUnicodeRegExp.test(rawValue)) {\n            return rawValue;\n        }\n        return defaultValue;\n    };\n\n    // Visible characters + space, full Unicode repertoire\n    var printableUnicodeRegExp = new RegExp('^' + unicodeRegExp.printable.source + '*$');\n    purify.printableUnicode = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && printableUnicodeRegExp.test(rawValue)) {\n            return rawValue;\n        }\n        return defaultValue;\n    };\n\n    purify.nonEmptyVisibleAscii = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && /^[\\x21-\\x7e]+$/.test(rawValue)) {\n            return rawValue;\n        }\n        return defaultValue;\n    };\n\n    purify.visibleAscii = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && /^[\\x21-\\x7e]*$/.test(rawValue)) {\n            return rawValue;\n        }\n        return defaultValue;\n    };\n\n    purify.nonEmptyPrintableAscii = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && /^[\\x20-\\x7e]+$/.test(rawValue)) {\n            return rawValue;\n        }\n        return defaultValue;\n    };\n\n    purify.printableAscii = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && /^[\\x20-\\x7e]*$/.test(rawValue)) {\n            return rawValue;\n        }\n        return defaultValue;\n    };\n\n    purify.alphaNumeric = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && /^[a-z0-9]*$/i.test(rawValue)) {\n            return rawValue;\n        } else if (typeof rawValue === 'number' && isFinite(rawValue) && !isNaN(rawValue) && rawValue === Math.floor(rawValue)) {\n            return String(rawValue);\n        }\n        return defaultValue;\n    };\n\n    purify.nonEmptyAlphaNumeric = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && /^[a-z0-9]+$/i.test(rawValue)) {\n            return rawValue;\n        } else if (typeof rawValue === 'number' && isFinite(rawValue) && !isNaN(rawValue) && rawValue === Math.floor(rawValue)) {\n            return String(rawValue);\n        }\n        return defaultValue;\n    };\n\n    purify.alphaNumericWithDot = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && /^[a-z0-9\\.]*$/i.test(rawValue)) {\n            return rawValue;\n        } else if (typeof rawValue === 'number' && isFinite(rawValue) && !isNaN(rawValue)) {\n            return String(rawValue);\n        }\n        return defaultValue;\n    };\n\n    purify.nonEmptyAlphaNumericWithDot = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && /^[a-z0-9\\.]+$/i.test(rawValue)) {\n            return rawValue;\n        } else if (typeof rawValue === 'number' && isFinite(rawValue) && !isNaN(rawValue)) {\n            return String(rawValue);\n        }\n        return defaultValue;\n    };\n\n    purify.uuid = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && oneValidation.uuid.test(rawValue)) {\n            return rawValue;\n        }\n        return defaultValue;\n    };\n\n    purify.upperCaseUuid = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && oneValidation.upperCaseUuid.test(rawValue)) {\n            return rawValue;\n        }\n        return defaultValue;\n    };\n\n    purify.lowerCaseUuid = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string' && oneValidation.lowerCaseUuid.test(rawValue)) {\n            return rawValue;\n        }\n        return defaultValue;\n    };\n\n    purify.json = function (rawValue, defaultValue) {\n        if (typeof rawValue === 'string') {\n            try {\n                return JSON.parse(rawValue);\n            } catch (e) {}\n        }\n        return defaultValue;\n    };\n\n    return purify;\n})();\n"],"names":["this","global","oneValidation"],"mappings":"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"}